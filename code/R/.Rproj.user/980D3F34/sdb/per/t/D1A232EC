{
    "collab_server" : "",
    "contents" : "# Load packages  ------------------------------------------------------------------------------\nlibrary(tidyjson)\nlibrary(magrittr)\nlibrary(corrr)\nlibrary(stringr)\nlibrary(svglite)\nlibrary(RSQLite)\nlibrary(tidyverse)\n\n# EXP1: Read in and structure data ------------------------------------------------------------------\n# con = dbConnect(SQLite(),dbname = \"../javascript/experiment_1/participants.db\");\ncon = dbConnect(SQLite(),dbname = \"../../data/experiment1.db\");\ndf.data = dbReadTable(con,\"moral_dynamics\")\ndbDisconnect(con)\n\n#filter out incompletes \ndf.data = df.data %>% \n  filter(status %in% 3:5) %>% \n  filter(!str_detect(uniqueid,'debug')) %>% \n  filter(codeversion == 'experiment_1')\n\n# demographic data \ndf.demographics = df.data$datastring %>% \n  spread_values(condition = jnumber('condition'),\n                age = jnumber('questiondata','age'),\n                gender = jstring('questiondata','sex'),\n                feedback = jstring('questiondata','feedback')\n  ) %>% \n  rename(participant = document.id) %>% \n  mutate(time = difftime(df.data$endhit,df.data$beginhit,units = 'mins'))\n\n# trial data \ndf.long = df.data$datastring %>% \n  as.tbl_json() %>% \n  spread_values(participant = jstring('workerId')) %>%\n  enter_object('data') %>%\n  gather_array('order') %>% \n  enter_object('trialdata') %>% \n  gather_keys('index') %>% \n  append_values_string('values') %>% \n  as.data.frame() %>% \n  spread(index,values) %>% \n  mutate(clip = str_replace(clip,'video','')) %>% \n  mutate_at(vars(clip,rating),funs(as.numeric)) %>% \n  mutate(participant = factor(participant,labels = 1:length(unique(participant))) %>% as.character() %>% as.numeric) %>% \n  arrange(participant) %>% \n  select(-document.id)\n\n# EXP1: Model predictions ---------------------------------------------------------------------------------------\n\n#RMSE \nrmse = function(x,y){\n  return(sqrt(mean((x-y)^2)))\n}\n\ndf.predictions = read.csv(\"../../data/effort.csv\",header=F) %>% \n  setNames(c(\"clip\",\"effort\")) %>% \n  left_join(read.csv(\"../../data/causality.csv\",header=F) %>% \n              setNames(c(\"clip\",\"caused\")))\n\n\ndf.tmp = df.long %>% \n  left_join(df.predictions) %>% \n  group_by(clip) %>% \n  summarise(data = mean(rating),\n            effort = mean(effort),\n            caused = mean(caused)\n            ) %>% \n  mutate(data = data/100) %>% \n  mutate(moving = ifelse(clip %in% c(4,12),0,1),\n         # caused = ifelse(clip %in% c(12,21,22,25,26),0,1)) %$%\n         caused.alternative = ifelse(clip %in% c(4,12,21,22,25,26),0,1)\n         ) %>%\n  mutate(prediction.effort.causality = glm(data~effort+caused,data=.,family=binomial(link='logit'))$fitted.values,\n         prediction.effort = glm(data~effort,data=.,family=binomial(link='logit'))$fitted.values)\n\ndf.long = df.long %>% \n  left_join(df.tmp %>% select(clip,prediction.effort.causality,prediction.effort))\n\ndf.tmp %>% \n  summarise(r.data.effort = cor(data,prediction.effort),\n            rmse.data.effort = rmse(data*100,prediction.effort*100),\n            r.data.effort.causality = cor(data,prediction.effort.causality),\n            rmse.data.effort.causality = rmse(data*100,prediction.effort.causality*100)) %>% \n  mutate_all(funs(round(.,2)))\n\n# EXP1: Plot results  -------------------------------------------------------------------------------\n\ndf.long %>% \n  # group_by(participant) %>%\n  # mutate(rating = scale(rating)) %>%\n  # ungroup() %>%\n  ggplot(aes(x=clip,y=rating))+\n  stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+\n  stat_summary(fun.y = mean, geom = 'line', size = 1)+\n  stat_summary(fun.y = mean, geom = 'point', size = 2)+\n  geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+\n  geom_line(aes(x=clip,y=prediction.effort*100),color='red',size=2,alpha=0.5)+\n  geom_point(aes(x=clip,y=prediction.effort*100),color='red',size=2,alpha=0.5)+\n  geom_line(aes(x=clip,y=prediction.effort.causality*100),color='blue',size=2,alpha=0.5)+\n  geom_point(aes(x=clip,y=prediction.effort.causality*100),color='blue',size=2,alpha=0.5)+\n  # geom_line(aes(group=participant),size=0.5,alpha=0.2)+\n  labs(y = 'Badness rating', x = 'clip number')+\n  scale_x_continuous(breaks = 1:28,labels = 1:28)+\n  theme_bw()+\n  theme(text = element_text(size = 20),\n    panel.grid = element_blank(),\n    legend.position='bottom')\n  # ggsave(\"../../figures/plots/mean_judgments.pdf\",width=12,height=4)\n  # ggsave(\"../../figures/plots/mean_judgments_predictions.pdf\",width=12,height=4)\n  # ggsave(\"../../figures/plots/mean_judgments_predictions.png\",width=12,height=4)\n  # ggsave(\"../../figures/plots/mean_judgments_predictions.svg\",width=12,height=4)\n\n\n\n\n\n\n\n\n  \n\n# EXP2: Read in and structure data ------------------------------------------------------------------\n# con = dbConnect(SQLite(),dbname = \"../javascript/experiment_1/participants.db\");\ncon = dbConnect(SQLite(),dbname = \"../../data/experiment2.db\");\ndf.data = dbReadTable(con,\"moral_dynamics\")\ndbDisconnect(con)\n\n#filter out incompletes \ndf.data = df.data %>% \n  filter(status %in% 3:5) %>% \n  filter(!str_detect(uniqueid,'debug')) %>% \n  filter(codeversion == 'experiment_2')\n\n# demographic data \ndf.demographics = df.data$datastring %>% \n  spread_values(condition = jnumber('condition'),\n                age = jnumber('questiondata','age'),\n                gender = jstring('questiondata','sex'),\n                feedback = jstring('questiondata','feedback')\n  ) %>% \n  rename(participant = document.id) %>% \n  mutate(time = difftime(df.data$endhit,df.data$beginhit,units = 'mins'))\n\n# trial data \ndf.long = df.data$datastring %>% \n  as.tbl_json() %>% \n  spread_values(participant = jstring('workerId')) %>%\n  enter_object('data') %>%\n  gather_array('order') %>%\n  enter_object('trialdata') %>% \n  spread_values(display = jstring('order'),\n                rating = jnumber('rating')) %>%\n  enter_object('clip') %>% \n  gather_array('index') %>%\n  append_values_string('name') %>% \n  as.data.frame() %>% \n  select(-document.id) %>% \n  spread(index,name) %>% \n  mutate(clips = paste(`1`,`2`,sep=\"_\")) %>% \n  mutate(rating = ifelse(display == 'flipped',100-rating,rating)) %>%\n  mutate(clips = str_replace_all(clips,\"video\",\"\")) %>% \n  mutate(rating = rating-50) %>% \n  select(-c(display,`1`,`2`)) %>% \n  mutate(participant = factor(participant,labels = 1:length(unique(participant))))\n\n# results from moral kinematics paper\ndf.kinematics = read.csv(\"../../data/moral_kinematics_results.csv\",stringsAsFactors = F)\n\n# EXP2: Model predictions  --------------------------------------------------------------------\n\ndf.predictions = read.csv(\"../../data/effort.csv\",header=F) %>% \n  setNames(c(\"clip\",\"prediction\")) %>% \n  mutate(caused = ifelse(clip %in% c(4,12,21,22,25,26),0,1))\n\ndf.predictions = df.long$clips %>% \n  unique() %>% \n  str_split(\"_\") %>% \n  unlist() %>% \n  as.numeric() %>% \n  matrix(ncol=2,byrow=T) %>% \n  as.data.frame() %>% \n  setNames(c('clip1','clip2')) %>% \n  mutate(effort1 = df.predictions$prediction[clip1],\n         effort2 = df.predictions$prediction[clip2],\n         caused1 = df.predictions$caused[clip1],\n         caused2 = df.predictions$caused[clip2],\n         # diff.effort = effort2/effort1,\n         diff.effort = effort2-effort1,\n         diff.causality = caused2-caused1,\n         clips = paste(clip1,clip2,sep=\"_\")) %>% \n  select(clips,diff.effort,diff.causality)\n\ndf.regression = df.long %>% \n  group_by(clips) %>% \n  summarise(mean = mean(rating)) %>% \n  left_join(df.predictions) %>% \n  mutate(model.effort = lm(mean~diff.effort,data=.)$fitted.values,\n         model.effort.causality = lm(mean~diff.effort+diff.causality,data=.)$fitted.values)\n\n\n# EXP2: Plot - Means  -------------------------------------------------------------------------------\n\ndf.long %>% \n  # group_by(participant) %>%\n  # # mutate(rating = scale(rating)) %>%\n  # ungroup %>% \n  ggplot(aes(x=clips,y=rating))+\n  geom_hline(yintercept = 0, linetype = 2, color = 'gray')+\n  stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+\n  stat_summary(fun.y = mean, geom = 'point', size = 3)+\n  geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+\n  geom_point(data = df.regression,aes(x=clips,y=model.effort),color='red',size=3,alpha=1)+\n  geom_point(data = df.regression,aes(x=clips,y=model.effort.causality),color='green',size=3,alpha=1)+\n  # geom_line(aes(group=participant),size=0.5,alpha=0.2)+\n  labs(y = 'Which action was worse?\\n(1st clip vs. 2nd clip)', x = 'clips')+\n  theme_bw()+\n  theme(text = element_text(size = 20),\n        panel.grid = element_blank(),\n        legend.position='bottom')\n# ggsave(\"../../figures/plots/exp2_judgments.pdf\",width=10,height=4)\n# ggsave(\"../../figures/plots/exp2_judgments.pdf\",width=10,height=6)\n# ggsave(\"../../figures/plots/mean_judgments_predictions.pdf\",width=12,height=4)\n# ggsave(\"../../figures/plots/mean_judgments_predictions.png\",width=12,height=4)\n# ggsave(\"../../figures/plots/mean_judgments_predictions.svg\",width=12,height=4)\n\n# EXP2: Plot - Scatter ------------------------------------------------------------------------\n\ndf.regression %>% \n  ggplot(aes(x=mean,y=model.effort))+\n  # stat_summary(y)+\n  geom_point()\n\ndf.regression %$% \n  cor(mean,model.effort)\n  \n# EXP2: Plot - Bar plot (comparison with kinematics paper results) ------------------------------------------------------------------------\n\ndf.long %>% \n  group_by(clips) %>% \n  summarise(proportion = sum(rating<0)/n()) %>% \n  left_join(df.kinematics %>% filter(clips != 'N/a')) %>% \n  select(-trial) %>% \n  gather(index,value,-clips) %>% \n  mutate(index = factor(index,levels = c('rating','proportion'),labels = c('original','replication'))) %>% \n  ggplot(aes(x = clips, y = value, group = index,fill = index))+\n  geom_bar(stat='identity', position = position_dodge(0.9),color = 'black',width=0.9)+\n  geom_hline(yintercept = 0.5,linetype=2,size=1)+\n  scale_fill_brewer(type='qual',palette=3)+\n  theme_bw()+\n  labs(y = '% first clip worse', fill = '')+\n  theme(panel.grid = element_blank(),\n        legend.position = 'top',\n        text = element_text(size=20))+\n  ggsave(\"../../figures/plots/exp2_proportions.pdf\",width=12,height=4)\n\n  \n# df.long %>% \n#   group_by(clips) %>% \n#   summarise(proportion = sum(rating<0)/n()) %>% \n#   left_join(df.kinematics %>% filter(clips != 'N/a')) %$% \n#   cor(proportion,rating)\n\n\n# EXP3: Read in and structure data ------------------------------------------------------------------\n# con = dbConnect(SQLite(),dbname = \"../javascript/experiment_3/participants.db\");\ncon = dbConnect(SQLite(),dbname = \"../../data/experiment3.db\");\ndf.data = dbReadTable(con,\"moral_dynamics\")\ndbDisconnect(con)\n\n#filter out incompletes \ndf.data = df.data %>% \n  filter(status %in% 3:5) %>% \n  filter(!str_detect(uniqueid,'debug')) %>%\n  filter(codeversion == 'experiment_3')\n\n# demographic data \ndf.demographics = df.data$datastring %>% \n  spread_values(condition = jnumber('condition'),\n                age = jnumber('questiondata','age'),\n                gender = jstring('questiondata','sex'),\n                feedback = jstring('questiondata','feedback')\n  ) %>% \n  rename(participant = document.id) %>% \n  mutate(time = difftime(df.data$endhit,df.data$beginhit,units = 'mins'))\n\ndf.trials = data.frame(trial = 1:11, \n                       pair = c(\"video3,video1\",\n                         \"video11,video4\",\n                         \"video6,video5\",\n                         \"video7,video12\",\n                         \"video7,video4\",\n                         \"video4,video12\",\n                         \"video11,video7\",\n                         \"video8,video10\",\n                         \"video9,video2\",\n                         \"video10,video9\",\n                         \"video10,video3\"),stringsAsFactors = F)\n\n# trial data \ndf.long = df.data$datastring %>% \n  as.tbl_json() %>% \n  enter_object('data') %>%\n  gather_array('order') %>%\n  enter_object('trialdata') %>%\n  spread_values(clip = jstring('clip'),\n                display = jstring('order'),\n                rating = jstring('rating')\n                ) %>%\n  as.data.frame() %>% \n  separate(clip,into = c('left','right')) %>% \n  rename(participant = document.id) %>%\n  # mutate(left = ifelse(display == 'flipped',r,l),\n  #        right = ifelse(display == 'flipped',l,r)) %>%\n  mutate(pair = paste0(left,\",\",right)) %>% \n  left_join(df.trials) %>% \n  mutate(rating = as.numeric(rating),\n         rating = ifelse(display == 'flipped',7-rating,rating)) %>% \n  select(participant,trial,order,left,right,rating) %>% \n  arrange(participant,trial)\n  \n# EXP3: Plot - Means  -------------------------------------------------------------------------------\n\ndf.long %>% \n  # mutate(rating = ifelse(rating <=3, 0 ,1)) %>%\n  mutate(rating = rating-3.5,\n         trial = as.factor(trial)) %>%\n  ggplot(aes(x=trial,y=rating))+\n  geom_hline(yintercept = 0, linetype = 2, color = 'gray')+\n  stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+\n  stat_summary(fun.y = mean, geom = 'point', size = 3)+\n  geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0.1))+\n  annotate(geom = 'text', x = 0.3, y = -1.5, label = 'Clip 1', size = 10, angle = 90)+\n  annotate(geom = 'text', x = 0.3, y = 1.5, label = 'Clip 2', size = 10, angle = 90)+\n  labs(y = 'Which action was worse?', x = 'trial')+\n  scale_y_continuous(breaks = seq(-2.5,2.5,1), labels = c('much worse','worse','somewhat\\nworse',\n                                                          'somewhat\\nworse', 'worse','much worse'))+\n  coord_cartesian(xlim = c(0,12), ylim = c(-3,3),expand=F)+\n  theme_bw()+\n  theme(text = element_text(size = 20),\n        panel.grid = element_blank(),\n        legend.position='bottom')\n\n# Plot collapsed results\ndf.long %>%\n  mutate(rating = ifelse(rating <= 3, 1, 0)) %>%\n  ggplot(aes(x=trial,y=rating))+\n  geom_hline(yintercept=0.5, linetype=2,color='gray')+\n  stat_summary(fun.data=mean_cl_boot,geom='linerange',size=0.5)+\n  stat_summary(fun.y=mean,geom='point',size=3)+\n  geom_point(alpha=0.2,position=position_jitter(width=0.1,height=0.1))+\n  labs(y = 'Which action was worse?', x = 'trial')+\n  scale_y_continuous(breaks = seq(0,1), labels = c('right','left'))+\n  coord_cartesian(xlim=c(0,12),ylim=c(0,1),expand=F)+\n  theme_bw()+\n  theme(text=element_text(size=20),\n        panel.grid = element_blank(),\n        legend.position='bottom')\n\n\n# EXP4: Read in and structure data ------------------------------------------------------------------\n# con = dbConnect(SQLite(),dbname = \"../javascript/experiment_4/participants.db\");\ncon = dbConnect(SQLite(),dbname = \"../../data/experiment4.db\");\ndf.data = dbReadTable(con,\"moral_dynamics\")\ndbDisconnect(con)\n\n#filter out incompletes \ndf.data = df.data %>% \n  filter(status %in% 3:5) %>% \n  filter(!str_detect(uniqueid,'debug')) %>% \n  filter(codeversion == 'experiment_4')\n\n# demographic data \ndf.demographics = df.data$datastring %>% \n  spread_values(condition = jnumber('condition'),\n                age = jnumber('questiondata','age'),\n                gender = jstring('questiondata','sex'),\n                feedback = jstring('questiondata','feedback')\n  ) %>% \n  rename(participant = document.id) %>% \n  mutate(time = difftime(df.data$endhit,df.data$beginhit,units = 'mins'))\n\n# trial data \ndf.long = df.data$datastring %>% \n  as.tbl_json() %>% \n  spread_values(participant = jstring('workerId')) %>%\n  enter_object('data') %>%\n  gather_array('order') %>% \n  enter_object('trialdata') %>% \n  gather_keys('index') %>% \n  append_values_string('values') %>% \n  as.data.frame() %>% \n  spread(index,values) %>% \n  mutate(clip = str_replace(clip,'video','')) %>% \n  mutate_at(vars(clip,rating),funs(as.numeric)) %>% \n  mutate(participant = factor(participant,labels = 1:length(unique(participant))) %>% as.character() %>% as.numeric) %>% \n  arrange(participant) %>% \n  select(-document.id)\n\n# EXP4: Plot results  -------------------------------------------------------------------------------\n\ndf.long %>% \n  # group_by(participant) %>%\n  # mutate(rating = scale(rating)) %>%\n  # ungroup() %>%\n  ggplot(aes(x=clip,y=rating))+\n  stat_summary(fun.data = mean_cl_boot, geom = 'linerange', size = 0.5)+\n  # stat_summary(fun.y = mean, geom = 'line', size = 1)+\n  stat_summary(fun.y = mean, geom = 'line', size = 2)+\n  geom_point(alpha = 0.2, position = position_jitter(width = 0.1, height = 0))+\n  scale_x_continuous(breaks = 1:24,labels = 1:24)+\n  theme_bw()+\n  theme(text = element_text(size = 20),\n        panel.grid = element_blank(),\n        legend.position='bottom')",
    "created" : 1516997169300.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "9|35|47|0|\n48|26|85|0|\n86|22|121|0|\n122|35|168|0|\n169|27|200|0|\n201|22|225|0|\n226|23|235|2|\n236|67|263|0|\n264|35|320|2|\n321|22|359|0|\n",
    "hash" : "3798589169",
    "id" : "D1A232EC",
    "lastKnownWriteTime" : 1517268844,
    "last_content_update" : 1517268844258,
    "path" : "~/Dropbox/moral_dynamics/code/R/moral_dynamics_test.R",
    "project_path" : "moral_dynamics_test.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}